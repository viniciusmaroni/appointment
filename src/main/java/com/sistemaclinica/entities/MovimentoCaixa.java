package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MovimentoCaixa generated by hbm2java
 */
@Entity
@Table(name="MOVIMENTO_CAIXA"
    ,schema="DESENV"
)
public class MovimentoCaixa  implements java.io.Serializable {


     private BigDecimal id;
     private Conta conta;
     private ContaPagar contaPagar;
     private FechamentoConvenio fechamentoConvenio;
     private MovimentacaoCheque movimentacaoCheque;
     private MovimentoCaixa movimentoCaixa;
     private PagamentoCobranca pagamentoCobranca;
     private PagamentoNotaFiscal pagamentoNotaFiscal;
     private PagamentoPaciente pagamentoPaciente;
     private PagamentoProfissional pagamentoProfissional;
     private PagamentosTitulos pagamentosTitulos;
     private PlanoContas planoContas;
     private Empresa empresa;
     private String descricao;
     private Date dtMovimento;
     private BigDecimal valorRecebido;
     private BigDecimal valorPago;
     private Date dtFechamento;
     private BigDecimal cdCriadoPor;
     private Date dtCriacao;
     private BigDecimal cdAlteradoPor;
     private Date dtUltimaAlteracao;
     private BigDecimal valorSaldo;
     private Set movimentoCaixas = new HashSet(0);

    public MovimentoCaixa() {
    }

	
    public MovimentoCaixa(BigDecimal id, Conta conta, PlanoContas planoContas, Empresa empresa, Date dtMovimento, BigDecimal valorRecebido, BigDecimal valorPago, BigDecimal valorSaldo) {
        this.id = id;
        this.conta = conta;
        this.planoContas = planoContas;
        this.empresa = empresa;
        this.dtMovimento = dtMovimento;
        this.valorRecebido = valorRecebido;
        this.valorPago = valorPago;
        this.valorSaldo = valorSaldo;
    }
    public MovimentoCaixa(BigDecimal id, Conta conta, ContaPagar contaPagar, FechamentoConvenio fechamentoConvenio, MovimentacaoCheque movimentacaoCheque, MovimentoCaixa movimentoCaixa, PagamentoCobranca pagamentoCobranca, PagamentoNotaFiscal pagamentoNotaFiscal, PagamentoPaciente pagamentoPaciente, PagamentoProfissional pagamentoProfissional, PagamentosTitulos pagamentosTitulos, PlanoContas planoContas, Empresa empresa, String descricao, Date dtMovimento, BigDecimal valorRecebido, BigDecimal valorPago, Date dtFechamento, BigDecimal cdCriadoPor, Date dtCriacao, BigDecimal cdAlteradoPor, Date dtUltimaAlteracao, BigDecimal valorSaldo, Set movimentoCaixas) {
       this.id = id;
       this.conta = conta;
       this.contaPagar = contaPagar;
       this.fechamentoConvenio = fechamentoConvenio;
       this.movimentacaoCheque = movimentacaoCheque;
       this.movimentoCaixa = movimentoCaixa;
       this.pagamentoCobranca = pagamentoCobranca;
       this.pagamentoNotaFiscal = pagamentoNotaFiscal;
       this.pagamentoPaciente = pagamentoPaciente;
       this.pagamentoProfissional = pagamentoProfissional;
       this.pagamentosTitulos = pagamentosTitulos;
       this.planoContas = planoContas;
       this.empresa = empresa;
       this.descricao = descricao;
       this.dtMovimento = dtMovimento;
       this.valorRecebido = valorRecebido;
       this.valorPago = valorPago;
       this.dtFechamento = dtFechamento;
       this.cdCriadoPor = cdCriadoPor;
       this.dtCriacao = dtCriacao;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
       this.valorSaldo = valorSaldo;
       this.movimentoCaixas = movimentoCaixas;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CON_ID", nullable=false)
    public Conta getConta() {
        return this.conta;
    }
    
    public void setConta(Conta conta) {
        this.conta = conta;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONP_ID")
    public ContaPagar getContaPagar() {
        return this.contaPagar;
    }
    
    public void setContaPagar(ContaPagar contaPagar) {
        this.contaPagar = contaPagar;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="FECO_ID")
    public FechamentoConvenio getFechamentoConvenio() {
        return this.fechamentoConvenio;
    }
    
    public void setFechamentoConvenio(FechamentoConvenio fechamentoConvenio) {
        this.fechamentoConvenio = fechamentoConvenio;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="MOV_CHE_ID", referencedColumnName="CHE_ID"), 
        @JoinColumn(name="MOV_DT_MOVIMENTACAO", referencedColumnName="DT_MOVIMENTACAO") } )
    public MovimentacaoCheque getMovimentacaoCheque() {
        return this.movimentacaoCheque;
    }
    
    public void setMovimentacaoCheque(MovimentacaoCheque movimentacaoCheque) {
        this.movimentacaoCheque = movimentacaoCheque;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MOVCA_ID")
    public MovimentoCaixa getMovimentoCaixa() {
        return this.movimentoCaixa;
    }
    
    public void setMovimentoCaixa(MovimentoCaixa movimentoCaixa) {
        this.movimentoCaixa = movimentoCaixa;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAGCOB_ID")
    public PagamentoCobranca getPagamentoCobranca() {
        return this.pagamentoCobranca;
    }
    
    public void setPagamentoCobranca(PagamentoCobranca pagamentoCobranca) {
        this.pagamentoCobranca = pagamentoCobranca;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="PAGNF_PAGFOR_ID", referencedColumnName="PAGFOR_ID"), 
        @JoinColumn(name="PAGNF_PRONF_PARCELA", referencedColumnName="PRONF_PARCELA"), 
        @JoinColumn(name="PAGNF_PRONF_NF_ID", referencedColumnName="PRONF_NF_ID") } )
    public PagamentoNotaFiscal getPagamentoNotaFiscal() {
        return this.pagamentoNotaFiscal;
    }
    
    public void setPagamentoNotaFiscal(PagamentoNotaFiscal pagamentoNotaFiscal) {
        this.pagamentoNotaFiscal = pagamentoNotaFiscal;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAGPAC_ID")
    public PagamentoPaciente getPagamentoPaciente() {
        return this.pagamentoPaciente;
    }
    
    public void setPagamentoPaciente(PagamentoPaciente pagamentoPaciente) {
        this.pagamentoPaciente = pagamentoPaciente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAGPRO_ID")
    public PagamentoProfissional getPagamentoProfissional() {
        return this.pagamentoProfissional;
    }
    
    public void setPagamentoProfissional(PagamentoProfissional pagamentoProfissional) {
        this.pagamentoProfissional = pagamentoProfissional;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAGTIT_ID")
    public PagamentosTitulos getPagamentosTitulos() {
        return this.pagamentosTitulos;
    }
    
    public void setPagamentosTitulos(PagamentosTitulos pagamentosTitulos) {
        this.pagamentosTitulos = pagamentosTitulos;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PLA_ID", nullable=false)
    public PlanoContas getPlanoContas() {
        return this.planoContas;
    }
    
    public void setPlanoContas(PlanoContas planoContas) {
        this.planoContas = planoContas;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    
    @Column(name="DESCRICAO", length=1000)
    public String getDescricao() {
        return this.descricao;
    }
    
    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_MOVIMENTO", nullable=false, length=7)
    public Date getDtMovimento() {
        return this.dtMovimento;
    }
    
    public void setDtMovimento(Date dtMovimento) {
        this.dtMovimento = dtMovimento;
    }

    
    @Column(name="VALOR_RECEBIDO", nullable=false, precision=15)
    public BigDecimal getValorRecebido() {
        return this.valorRecebido;
    }
    
    public void setValorRecebido(BigDecimal valorRecebido) {
        this.valorRecebido = valorRecebido;
    }

    
    @Column(name="VALOR_PAGO", nullable=false, precision=15)
    public BigDecimal getValorPago() {
        return this.valorPago;
    }
    
    public void setValorPago(BigDecimal valorPago) {
        this.valorPago = valorPago;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_FECHAMENTO", length=7)
    public Date getDtFechamento() {
        return this.dtFechamento;
    }
    
    public void setDtFechamento(Date dtFechamento) {
        this.dtFechamento = dtFechamento;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }

    
    @Column(name="VALOR_SALDO", nullable=false, precision=17)
    public BigDecimal getValorSaldo() {
        return this.valorSaldo;
    }
    
    public void setValorSaldo(BigDecimal valorSaldo) {
        this.valorSaldo = valorSaldo;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="movimentoCaixa")
    public Set getMovimentoCaixas() {
        return this.movimentoCaixas;
    }
    
    public void setMovimentoCaixas(Set movimentoCaixas) {
        this.movimentoCaixas = movimentoCaixas;
    }




}


