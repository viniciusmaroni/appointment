package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * LinhaNotaFiscal generated by hbm2java
 */
@Entity
@Table(name="LINHA_NOTA_FISCAL"
    ,schema="DESENV"
)
public class LinhaNotaFiscal  implements java.io.Serializable {


     private BigDecimal id;
     private EmbalagemItem embalagemItem;
     private NotaFiscal notaFiscal;
     private PlanoContas planoContas;
     private Empresa empresa;
     private String descricao;
     private BigDecimal quantidade;
     private BigDecimal valorUnitario;
     private BigDecimal cdCriadoPor;
     private BigDecimal cdAlteradoPor;
     private Date dtCriacao;
     private Date dtUltimaAlteracao;

    public LinhaNotaFiscal() {
    }

	
    public LinhaNotaFiscal(BigDecimal id, EmbalagemItem embalagemItem, NotaFiscal notaFiscal, PlanoContas planoContas, Empresa empresa, String descricao, BigDecimal quantidade, BigDecimal valorUnitario) {
        this.id = id;
        this.embalagemItem = embalagemItem;
        this.notaFiscal = notaFiscal;
        this.planoContas = planoContas;
        this.empresa = empresa;
        this.descricao = descricao;
        this.quantidade = quantidade;
        this.valorUnitario = valorUnitario;
    }
    public LinhaNotaFiscal(BigDecimal id, EmbalagemItem embalagemItem, NotaFiscal notaFiscal, PlanoContas planoContas, Empresa empresa, String descricao, BigDecimal quantidade, BigDecimal valorUnitario, BigDecimal cdCriadoPor, BigDecimal cdAlteradoPor, Date dtCriacao, Date dtUltimaAlteracao) {
       this.id = id;
       this.embalagemItem = embalagemItem;
       this.notaFiscal = notaFiscal;
       this.planoContas = planoContas;
       this.empresa = empresa;
       this.descricao = descricao;
       this.quantidade = quantidade;
       this.valorUnitario = valorUnitario;
       this.cdCriadoPor = cdCriadoPor;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtCriacao = dtCriacao;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="EITEM_ITEM_ID", referencedColumnName="ITEM_ID", nullable=false), 
        @JoinColumn(name="EITEM_ID", referencedColumnName="ID", nullable=false) } )
    public EmbalagemItem getEmbalagemItem() {
        return this.embalagemItem;
    }
    
    public void setEmbalagemItem(EmbalagemItem embalagemItem) {
        this.embalagemItem = embalagemItem;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="NF_ID", nullable=false)
    public NotaFiscal getNotaFiscal() {
        return this.notaFiscal;
    }
    
    public void setNotaFiscal(NotaFiscal notaFiscal) {
        this.notaFiscal = notaFiscal;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PLA_ID", nullable=false)
    public PlanoContas getPlanoContas() {
        return this.planoContas;
    }
    
    public void setPlanoContas(PlanoContas planoContas) {
        this.planoContas = planoContas;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    
    @Column(name="DESCRICAO", nullable=false, length=300)
    public String getDescricao() {
        return this.descricao;
    }
    
    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    
    @Column(name="QUANTIDADE", nullable=false, precision=22, scale=0)
    public BigDecimal getQuantidade() {
        return this.quantidade;
    }
    
    public void setQuantidade(BigDecimal quantidade) {
        this.quantidade = quantidade;
    }

    
    @Column(name="VALOR_UNITARIO", nullable=false, precision=17, scale=4)
    public BigDecimal getValorUnitario() {
        return this.valorUnitario;
    }
    
    public void setValorUnitario(BigDecimal valorUnitario) {
        this.valorUnitario = valorUnitario;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }




}


