package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Especialidade generated by hbm2java
 */
@Entity
@Table(name="ESPECIALIDADE"
    ,schema="DESENV"
)
public class Especialidade  implements java.io.Serializable {


     private EspecialidadeId id;
     private Empresa empresa;
     private String nome;
     private BigDecimal cdCriadoPor;
     private Date dtCriacao;
     private BigDecimal cdAlteradoPor;
     private Date dtUltimaAlteracao;
     private String nomeReduzido;
     private Set convenioEspecialidades = new HashSet(0);
     private Set especialidadeProfissionals = new HashSet(0);
     private Set procedimentos = new HashSet(0);
     private Set repasseProfissionals = new HashSet(0);
     private Set guiaPacientes = new HashSet(0);

    public Especialidade() {
    }

	
    public Especialidade(EspecialidadeId id, Empresa empresa, String nome, String nomeReduzido) {
        this.id = id;
        this.empresa = empresa;
        this.nome = nome;
        this.nomeReduzido = nomeReduzido;
    }
    public Especialidade(EspecialidadeId id, Empresa empresa, String nome, BigDecimal cdCriadoPor, Date dtCriacao, BigDecimal cdAlteradoPor, Date dtUltimaAlteracao, String nomeReduzido, Set convenioEspecialidades, Set especialidadeProfissionals, Set procedimentos, Set repasseProfissionals, Set guiaPacientes) {
       this.id = id;
       this.empresa = empresa;
       this.nome = nome;
       this.cdCriadoPor = cdCriadoPor;
       this.dtCriacao = dtCriacao;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
       this.nomeReduzido = nomeReduzido;
       this.convenioEspecialidades = convenioEspecialidades;
       this.especialidadeProfissionals = especialidadeProfissionals;
       this.procedimentos = procedimentos;
       this.repasseProfissionals = repasseProfissionals;
       this.guiaPacientes = guiaPacientes;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="id", column=@Column(name="ID", nullable=false, precision=22, scale=0) ), 
        @AttributeOverride(name="empId", column=@Column(name="EMP_ID", nullable=false, precision=22, scale=0) ) } )
    public EspecialidadeId getId() {
        return this.id;
    }
    
    public void setId(EspecialidadeId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false, insertable=false, updatable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    
    @Column(name="NOME", nullable=false, length=30)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }

    
    @Column(name="NOME_REDUZIDO", nullable=false, length=6)
    public String getNomeReduzido() {
        return this.nomeReduzido;
    }
    
    public void setNomeReduzido(String nomeReduzido) {
        this.nomeReduzido = nomeReduzido;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="especialidade")
    public Set getConvenioEspecialidades() {
        return this.convenioEspecialidades;
    }
    
    public void setConvenioEspecialidades(Set convenioEspecialidades) {
        this.convenioEspecialidades = convenioEspecialidades;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="especialidade")
    public Set getEspecialidadeProfissionals() {
        return this.especialidadeProfissionals;
    }
    
    public void setEspecialidadeProfissionals(Set especialidadeProfissionals) {
        this.especialidadeProfissionals = especialidadeProfissionals;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="especialidade")
    public Set getProcedimentos() {
        return this.procedimentos;
    }
    
    public void setProcedimentos(Set procedimentos) {
        this.procedimentos = procedimentos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="especialidade")
    public Set getRepasseProfissionals() {
        return this.repasseProfissionals;
    }
    
    public void setRepasseProfissionals(Set repasseProfissionals) {
        this.repasseProfissionals = repasseProfissionals;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="especialidade")
    public Set getGuiaPacientes() {
        return this.guiaPacientes;
    }
    
    public void setGuiaPacientes(Set guiaPacientes) {
        this.guiaPacientes = guiaPacientes;
    }




}


