package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Item generated by hbm2java
 */
@Entity
@Table(name="ITEM"
    ,schema="DESENV"
)
public class Item  implements java.io.Serializable {


     private BigDecimal id;
     private CategoriaItem categoriaItem;
     private PlanoContas planoContas;
     private UnidadeMedida unidadeMedida;
     private Empresa empresa;
     private String nome;
     private char flAtivo;
     private BigDecimal qtEstoqueOld;
     private BigDecimal qtMinimaEstoqueOld;
     private BigDecimal vlMedioOld;
     private Date dtUltimaCompraOld;
     private BigDecimal cdCriadoPor;
     private BigDecimal cdAlteradoPor;
     private Date dtCriacao;
     private Date dtUltimaAlteracao;
     private Set balancoItems = new HashSet(0);
     private Set itemProcedimentos = new HashSet(0);
     private Set embalagemItems = new HashSet(0);
     private Set inventarioItems = new HashSet(0);
     private Set itemUnidades = new HashSet(0);

    public Item() {
    }

	
    public Item(BigDecimal id, CategoriaItem categoriaItem, UnidadeMedida unidadeMedida, Empresa empresa, String nome, char flAtivo, BigDecimal qtEstoqueOld, BigDecimal qtMinimaEstoqueOld, BigDecimal vlMedioOld, BigDecimal cdCriadoPor, BigDecimal cdAlteradoPor, Date dtCriacao, Date dtUltimaAlteracao) {
        this.id = id;
        this.categoriaItem = categoriaItem;
        this.unidadeMedida = unidadeMedida;
        this.empresa = empresa;
        this.nome = nome;
        this.flAtivo = flAtivo;
        this.qtEstoqueOld = qtEstoqueOld;
        this.qtMinimaEstoqueOld = qtMinimaEstoqueOld;
        this.vlMedioOld = vlMedioOld;
        this.cdCriadoPor = cdCriadoPor;
        this.cdAlteradoPor = cdAlteradoPor;
        this.dtCriacao = dtCriacao;
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }
    public Item(BigDecimal id, CategoriaItem categoriaItem, PlanoContas planoContas, UnidadeMedida unidadeMedida, Empresa empresa, String nome, char flAtivo, BigDecimal qtEstoqueOld, BigDecimal qtMinimaEstoqueOld, BigDecimal vlMedioOld, Date dtUltimaCompraOld, BigDecimal cdCriadoPor, BigDecimal cdAlteradoPor, Date dtCriacao, Date dtUltimaAlteracao, Set balancoItems, Set itemProcedimentos, Set embalagemItems, Set inventarioItems, Set itemUnidades) {
       this.id = id;
       this.categoriaItem = categoriaItem;
       this.planoContas = planoContas;
       this.unidadeMedida = unidadeMedida;
       this.empresa = empresa;
       this.nome = nome;
       this.flAtivo = flAtivo;
       this.qtEstoqueOld = qtEstoqueOld;
       this.qtMinimaEstoqueOld = qtMinimaEstoqueOld;
       this.vlMedioOld = vlMedioOld;
       this.dtUltimaCompraOld = dtUltimaCompraOld;
       this.cdCriadoPor = cdCriadoPor;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtCriacao = dtCriacao;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
       this.balancoItems = balancoItems;
       this.itemProcedimentos = itemProcedimentos;
       this.embalagemItems = embalagemItems;
       this.inventarioItems = inventarioItems;
       this.itemUnidades = itemUnidades;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="CITEM_ID", referencedColumnName="ID", nullable=false), 
        @JoinColumn(name="EMP_ID", referencedColumnName="EMP_ID", nullable=false) } )
    public CategoriaItem getCategoriaItem() {
        return this.categoriaItem;
    }
    
    public void setCategoriaItem(CategoriaItem categoriaItem) {
        this.categoriaItem = categoriaItem;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PLA_ID")
    public PlanoContas getPlanoContas() {
        return this.planoContas;
    }
    
    public void setPlanoContas(PlanoContas planoContas) {
        this.planoContas = planoContas;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="UNIME_SIGLA", nullable=false)
    public UnidadeMedida getUnidadeMedida() {
        return this.unidadeMedida;
    }
    
    public void setUnidadeMedida(UnidadeMedida unidadeMedida) {
        this.unidadeMedida = unidadeMedida;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false, insertable=false, updatable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    
    @Column(name="NOME", nullable=false, length=100)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    
    @Column(name="FL_ATIVO", nullable=false, length=1)
    public char getFlAtivo() {
        return this.flAtivo;
    }
    
    public void setFlAtivo(char flAtivo) {
        this.flAtivo = flAtivo;
    }

    
    @Column(name="QT_ESTOQUE_OLD", nullable=false, precision=22, scale=0)
    public BigDecimal getQtEstoqueOld() {
        return this.qtEstoqueOld;
    }
    
    public void setQtEstoqueOld(BigDecimal qtEstoqueOld) {
        this.qtEstoqueOld = qtEstoqueOld;
    }

    
    @Column(name="QT_MINIMA_ESTOQUE_OLD", nullable=false, precision=22, scale=0)
    public BigDecimal getQtMinimaEstoqueOld() {
        return this.qtMinimaEstoqueOld;
    }
    
    public void setQtMinimaEstoqueOld(BigDecimal qtMinimaEstoqueOld) {
        this.qtMinimaEstoqueOld = qtMinimaEstoqueOld;
    }

    
    @Column(name="VL_MEDIO_OLD", nullable=false, precision=21, scale=4)
    public BigDecimal getVlMedioOld() {
        return this.vlMedioOld;
    }
    
    public void setVlMedioOld(BigDecimal vlMedioOld) {
        this.vlMedioOld = vlMedioOld;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_COMPRA_OLD", length=7)
    public Date getDtUltimaCompraOld() {
        return this.dtUltimaCompraOld;
    }
    
    public void setDtUltimaCompraOld(Date dtUltimaCompraOld) {
        this.dtUltimaCompraOld = dtUltimaCompraOld;
    }

    
    @Column(name="CD_CRIADO_POR", nullable=false, precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    
    @Column(name="CD_ALTERADO_POR", nullable=false, precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", nullable=false, length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", nullable=false, length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
    public Set getBalancoItems() {
        return this.balancoItems;
    }
    
    public void setBalancoItems(Set balancoItems) {
        this.balancoItems = balancoItems;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
    public Set getItemProcedimentos() {
        return this.itemProcedimentos;
    }
    
    public void setItemProcedimentos(Set itemProcedimentos) {
        this.itemProcedimentos = itemProcedimentos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
    public Set getEmbalagemItems() {
        return this.embalagemItems;
    }
    
    public void setEmbalagemItems(Set embalagemItems) {
        this.embalagemItems = embalagemItems;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
    public Set getInventarioItems() {
        return this.inventarioItems;
    }
    
    public void setInventarioItems(Set inventarioItems) {
        this.inventarioItems = inventarioItems;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
    public Set getItemUnidades() {
        return this.itemUnidades;
    }
    
    public void setItemUnidades(Set itemUnidades) {
        this.itemUnidades = itemUnidades;
    }




}


