package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DocumentoEspaco generated by hbm2java
 */
@Entity
@Table(name="DOCUMENTO_ESPACO"
    ,schema="DESENV"
)
public class DocumentoEspaco  implements java.io.Serializable {


     private DocumentoEspacoId id;
     private Documento documento;
     private String nome;
     private char flImagem;
     private BigDecimal cdCriadoPor;
     private Date dtCriacao;
     private BigDecimal cdAlteradoPor;
     private Date dtUltimaAlteracao;
     private Set tipoContratosForTpcontDocesTituloFk = new HashSet(0);
     private Set tipoContratosForTpcontDocesCabFk = new HashSet(0);
     private Set tipoContratosForTpcontDocesRodapeFk = new HashSet(0);
     private Set tipoContratosForTpcontDocesCorpoFk = new HashSet(0);
     private Set documentoMensagemUnidades = new HashSet(0);

    public DocumentoEspaco() {
    }

	
    public DocumentoEspaco(DocumentoEspacoId id, Documento documento, String nome, char flImagem) {
        this.id = id;
        this.documento = documento;
        this.nome = nome;
        this.flImagem = flImagem;
    }
    public DocumentoEspaco(DocumentoEspacoId id, Documento documento, String nome, char flImagem, BigDecimal cdCriadoPor, Date dtCriacao, BigDecimal cdAlteradoPor, Date dtUltimaAlteracao, Set tipoContratosForTpcontDocesTituloFk, Set tipoContratosForTpcontDocesCabFk, Set tipoContratosForTpcontDocesRodapeFk, Set tipoContratosForTpcontDocesCorpoFk, Set documentoMensagemUnidades) {
       this.id = id;
       this.documento = documento;
       this.nome = nome;
       this.flImagem = flImagem;
       this.cdCriadoPor = cdCriadoPor;
       this.dtCriacao = dtCriacao;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
       this.tipoContratosForTpcontDocesTituloFk = tipoContratosForTpcontDocesTituloFk;
       this.tipoContratosForTpcontDocesCabFk = tipoContratosForTpcontDocesCabFk;
       this.tipoContratosForTpcontDocesRodapeFk = tipoContratosForTpcontDocesRodapeFk;
       this.tipoContratosForTpcontDocesCorpoFk = tipoContratosForTpcontDocesCorpoFk;
       this.documentoMensagemUnidades = documentoMensagemUnidades;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="id", column=@Column(name="ID", nullable=false, length=20) ), 
        @AttributeOverride(name="docId", column=@Column(name="DOC_ID", nullable=false, length=20) ) } )
    public DocumentoEspacoId getId() {
        return this.id;
    }
    
    public void setId(DocumentoEspacoId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DOC_ID", nullable=false, insertable=false, updatable=false)
    public Documento getDocumento() {
        return this.documento;
    }
    
    public void setDocumento(Documento documento) {
        this.documento = documento;
    }

    
    @Column(name="NOME", nullable=false, length=80)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    
    @Column(name="FL_IMAGEM", nullable=false, length=1)
    public char getFlImagem() {
        return this.flImagem;
    }
    
    public void setFlImagem(char flImagem) {
        this.flImagem = flImagem;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="documentoEspacoByTpcontDocesTituloFk")
    public Set getTipoContratosForTpcontDocesTituloFk() {
        return this.tipoContratosForTpcontDocesTituloFk;
    }
    
    public void setTipoContratosForTpcontDocesTituloFk(Set tipoContratosForTpcontDocesTituloFk) {
        this.tipoContratosForTpcontDocesTituloFk = tipoContratosForTpcontDocesTituloFk;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="documentoEspacoByTpcontDocesCabFk")
    public Set getTipoContratosForTpcontDocesCabFk() {
        return this.tipoContratosForTpcontDocesCabFk;
    }
    
    public void setTipoContratosForTpcontDocesCabFk(Set tipoContratosForTpcontDocesCabFk) {
        this.tipoContratosForTpcontDocesCabFk = tipoContratosForTpcontDocesCabFk;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="documentoEspacoByTpcontDocesRodapeFk")
    public Set getTipoContratosForTpcontDocesRodapeFk() {
        return this.tipoContratosForTpcontDocesRodapeFk;
    }
    
    public void setTipoContratosForTpcontDocesRodapeFk(Set tipoContratosForTpcontDocesRodapeFk) {
        this.tipoContratosForTpcontDocesRodapeFk = tipoContratosForTpcontDocesRodapeFk;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="documentoEspacoByTpcontDocesCorpoFk")
    public Set getTipoContratosForTpcontDocesCorpoFk() {
        return this.tipoContratosForTpcontDocesCorpoFk;
    }
    
    public void setTipoContratosForTpcontDocesCorpoFk(Set tipoContratosForTpcontDocesCorpoFk) {
        this.tipoContratosForTpcontDocesCorpoFk = tipoContratosForTpcontDocesCorpoFk;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="documentoEspaco")
    public Set getDocumentoMensagemUnidades() {
        return this.documentoMensagemUnidades;
    }
    
    public void setDocumentoMensagemUnidades(Set documentoMensagemUnidades) {
        this.documentoMensagemUnidades = documentoMensagemUnidades;
    }




}


