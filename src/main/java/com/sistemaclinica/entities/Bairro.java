package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Bairro generated by hbm2java
 */
@Entity
@Table(name="BAIRRO"
    ,schema="DESENV"
)
public class Bairro  implements java.io.Serializable {


     private BairroId id;
     private Cidade cidade;
     private String nome;
     private BigDecimal cdCriadoPor;
     private Date dtCriacao;
     private BigDecimal cdAlteradoPor;
     private Date dtUltimaAlteracao;
     private Set pacientesForPacBaiFk = new HashSet(0);
     private Set pacientesForPacBaiResidencialFk = new HashSet(0);

    public Bairro() {
    }

	
    public Bairro(BairroId id, Cidade cidade, String nome) {
        this.id = id;
        this.cidade = cidade;
        this.nome = nome;
    }
    public Bairro(BairroId id, Cidade cidade, String nome, BigDecimal cdCriadoPor, Date dtCriacao, BigDecimal cdAlteradoPor, Date dtUltimaAlteracao, Set pacientesForPacBaiFk, Set pacientesForPacBaiResidencialFk) {
       this.id = id;
       this.cidade = cidade;
       this.nome = nome;
       this.cdCriadoPor = cdCriadoPor;
       this.dtCriacao = dtCriacao;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
       this.pacientesForPacBaiFk = pacientesForPacBaiFk;
       this.pacientesForPacBaiResidencialFk = pacientesForPacBaiResidencialFk;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="cidId", column=@Column(name="CID_ID", nullable=false, precision=22, scale=0) ), 
        @AttributeOverride(name="cidUfSigla", column=@Column(name="CID_UF_SIGLA", nullable=false, length=2) ), 
        @AttributeOverride(name="id", column=@Column(name="ID", nullable=false, precision=22, scale=0) ) } )
    public BairroId getId() {
        return this.id;
    }
    
    public void setId(BairroId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="CID_ID", referencedColumnName="ID", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="CID_UF_SIGLA", referencedColumnName="UF_SIGLA", nullable=false, insertable=false, updatable=false) } )
    public Cidade getCidade() {
        return this.cidade;
    }
    
    public void setCidade(Cidade cidade) {
        this.cidade = cidade;
    }

    
    @Column(name="NOME", nullable=false, length=50)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="bairroByPacBaiFk")
    public Set getPacientesForPacBaiFk() {
        return this.pacientesForPacBaiFk;
    }
    
    public void setPacientesForPacBaiFk(Set pacientesForPacBaiFk) {
        this.pacientesForPacBaiFk = pacientesForPacBaiFk;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="bairroByPacBaiResidencialFk")
    public Set getPacientesForPacBaiResidencialFk() {
        return this.pacientesForPacBaiResidencialFk;
    }
    
    public void setPacientesForPacBaiResidencialFk(Set pacientesForPacBaiResidencialFk) {
        this.pacientesForPacBaiResidencialFk = pacientesForPacBaiResidencialFk;
    }




}


