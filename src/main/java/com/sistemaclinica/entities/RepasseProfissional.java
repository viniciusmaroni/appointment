package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * RepasseProfissional generated by hbm2java
 */
@Entity
@Table(name="REPASSE_PROFISSIONAL"
    ,schema="DESENV"
    , uniqueConstraints = @UniqueConstraint(columnNames={"UNI_ID", "PROFISSIONAL_ID", "PROC_ID", "ESP_ID", "CATPRO_ID", "CONV_ID"}) 
)
public class RepasseProfissional  implements java.io.Serializable {


     private BigDecimal id;
     private CategoriaProcedimento categoriaProcedimento;
     private Convenio convenio;
     private Especialidade especialidade;
     private Procedimento procedimento;
     private Profissional profissional;
     private Unidade unidade;
     private Empresa empresa;
     private short pcRepasse;
     private char flDescontaTributacao;
     private char flDescontaMaterial;
     private char flDescontaLaboratorio;
     private BigDecimal cdCriadoPor;
     private Date dtCriacao;
     private BigDecimal cdAlteradoPor;
     private Date dtUltimaAlteracao;

    public RepasseProfissional() {
    }

	
    public RepasseProfissional(BigDecimal id, Convenio convenio, Especialidade especialidade, Profissional profissional, Unidade unidade, Empresa empresa, short pcRepasse, char flDescontaTributacao, char flDescontaMaterial, char flDescontaLaboratorio) {
        this.id = id;
        this.convenio = convenio;
        this.especialidade = especialidade;
        this.profissional = profissional;
        this.unidade = unidade;
        this.empresa = empresa;
        this.pcRepasse = pcRepasse;
        this.flDescontaTributacao = flDescontaTributacao;
        this.flDescontaMaterial = flDescontaMaterial;
        this.flDescontaLaboratorio = flDescontaLaboratorio;
    }
    public RepasseProfissional(BigDecimal id, CategoriaProcedimento categoriaProcedimento, Convenio convenio, Especialidade especialidade, Procedimento procedimento, Profissional profissional, Unidade unidade, Empresa empresa, short pcRepasse, char flDescontaTributacao, char flDescontaMaterial, char flDescontaLaboratorio, BigDecimal cdCriadoPor, Date dtCriacao, BigDecimal cdAlteradoPor, Date dtUltimaAlteracao) {
       this.id = id;
       this.categoriaProcedimento = categoriaProcedimento;
       this.convenio = convenio;
       this.especialidade = especialidade;
       this.procedimento = procedimento;
       this.profissional = profissional;
       this.unidade = unidade;
       this.empresa = empresa;
       this.pcRepasse = pcRepasse;
       this.flDescontaTributacao = flDescontaTributacao;
       this.flDescontaMaterial = flDescontaMaterial;
       this.flDescontaLaboratorio = flDescontaLaboratorio;
       this.cdCriadoPor = cdCriadoPor;
       this.dtCriacao = dtCriacao;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CATPRO_ID")
    public CategoriaProcedimento getCategoriaProcedimento() {
        return this.categoriaProcedimento;
    }
    
    public void setCategoriaProcedimento(CategoriaProcedimento categoriaProcedimento) {
        this.categoriaProcedimento = categoriaProcedimento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="CONV_ID", referencedColumnName="ID"), 
        @JoinColumn(name="EMP_ID", referencedColumnName="EMP_ID", nullable=false) } )
    public Convenio getConvenio() {
        return this.convenio;
    }
    
    public void setConvenio(Convenio convenio) {
        this.convenio = convenio;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="ESP_ID", referencedColumnName="ID", insertable=false, updatable=false), 
        @JoinColumn(name="EMP_ID", referencedColumnName="EMP_ID", nullable=false, insertable=false, updatable=false) } )
    public Especialidade getEspecialidade() {
        return this.especialidade;
    }
    
    public void setEspecialidade(Especialidade especialidade) {
        this.especialidade = especialidade;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PROC_ID")
    public Procedimento getProcedimento() {
        return this.procedimento;
    }
    
    public void setProcedimento(Procedimento procedimento) {
        this.procedimento = procedimento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PROFISSIONAL_ID", nullable=false)
    public Profissional getProfissional() {
        return this.profissional;
    }
    
    public void setProfissional(Profissional profissional) {
        this.profissional = profissional;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="UNI_ID", nullable=false)
    public Unidade getUnidade() {
        return this.unidade;
    }
    
    public void setUnidade(Unidade unidade) {
        this.unidade = unidade;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false, insertable=false, updatable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    
    @Column(name="PC_REPASSE", nullable=false, precision=3, scale=0)
    public short getPcRepasse() {
        return this.pcRepasse;
    }
    
    public void setPcRepasse(short pcRepasse) {
        this.pcRepasse = pcRepasse;
    }

    
    @Column(name="FL_DESCONTA_TRIBUTACAO", nullable=false, length=1)
    public char getFlDescontaTributacao() {
        return this.flDescontaTributacao;
    }
    
    public void setFlDescontaTributacao(char flDescontaTributacao) {
        this.flDescontaTributacao = flDescontaTributacao;
    }

    
    @Column(name="FL_DESCONTA_MATERIAL", nullable=false, length=1)
    public char getFlDescontaMaterial() {
        return this.flDescontaMaterial;
    }
    
    public void setFlDescontaMaterial(char flDescontaMaterial) {
        this.flDescontaMaterial = flDescontaMaterial;
    }

    
    @Column(name="FL_DESCONTA_LABORATORIO", nullable=false, length=1)
    public char getFlDescontaLaboratorio() {
        return this.flDescontaLaboratorio;
    }
    
    public void setFlDescontaLaboratorio(char flDescontaLaboratorio) {
        this.flDescontaLaboratorio = flDescontaLaboratorio;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }




}


