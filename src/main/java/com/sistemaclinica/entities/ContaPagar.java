package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ContaPagar generated by hbm2java
 */
@Entity
@Table(name="CONTA_PAGAR"
    ,schema="DESENV"
)
public class ContaPagar  implements java.io.Serializable {


     private BigDecimal id;
     private Fornecedor fornecedor;
     private Pedido pedido;
     private PlanoContas planoContas;
     private Empresa empresa;
     private Date dtVencimento;
     private BigDecimal valor;
     private String descricao;
     private Date dtPagamento;
     private BigDecimal vlPago;
     private Character flVariavel;
     private BigDecimal cdCriadoPor;
     private Date dtCriacao;
     private BigDecimal cdAlteradoPor;
     private Date dtUltimaAlteracao;
     private Set movimentoCaixas = new HashSet(0);

    public ContaPagar() {
    }

	
    public ContaPagar(BigDecimal id, PlanoContas planoContas, Empresa empresa, Date dtVencimento, BigDecimal valor, String descricao) {
        this.id = id;
        this.planoContas = planoContas;
        this.empresa = empresa;
        this.dtVencimento = dtVencimento;
        this.valor = valor;
        this.descricao = descricao;
    }
    public ContaPagar(BigDecimal id, Fornecedor fornecedor, Pedido pedido, PlanoContas planoContas, Empresa empresa, Date dtVencimento, BigDecimal valor, String descricao, Date dtPagamento, BigDecimal vlPago, Character flVariavel, BigDecimal cdCriadoPor, Date dtCriacao, BigDecimal cdAlteradoPor, Date dtUltimaAlteracao, Set movimentoCaixas) {
       this.id = id;
       this.fornecedor = fornecedor;
       this.pedido = pedido;
       this.planoContas = planoContas;
       this.empresa = empresa;
       this.dtVencimento = dtVencimento;
       this.valor = valor;
       this.descricao = descricao;
       this.dtPagamento = dtPagamento;
       this.vlPago = vlPago;
       this.flVariavel = flVariavel;
       this.cdCriadoPor = cdCriadoPor;
       this.dtCriacao = dtCriacao;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
       this.movimentoCaixas = movimentoCaixas;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="FORN_ID")
    public Fornecedor getFornecedor() {
        return this.fornecedor;
    }
    
    public void setFornecedor(Fornecedor fornecedor) {
        this.fornecedor = fornecedor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PED_ID")
    public Pedido getPedido() {
        return this.pedido;
    }
    
    public void setPedido(Pedido pedido) {
        this.pedido = pedido;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PLA_ID", nullable=false)
    public PlanoContas getPlanoContas() {
        return this.planoContas;
    }
    
    public void setPlanoContas(PlanoContas planoContas) {
        this.planoContas = planoContas;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_VENCIMENTO", nullable=false, length=7)
    public Date getDtVencimento() {
        return this.dtVencimento;
    }
    
    public void setDtVencimento(Date dtVencimento) {
        this.dtVencimento = dtVencimento;
    }

    
    @Column(name="VALOR", nullable=false, precision=15)
    public BigDecimal getValor() {
        return this.valor;
    }
    
    public void setValor(BigDecimal valor) {
        this.valor = valor;
    }

    
    @Column(name="DESCRICAO", nullable=false, length=100)
    public String getDescricao() {
        return this.descricao;
    }
    
    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_PAGAMENTO", length=7)
    public Date getDtPagamento() {
        return this.dtPagamento;
    }
    
    public void setDtPagamento(Date dtPagamento) {
        this.dtPagamento = dtPagamento;
    }

    
    @Column(name="VL_PAGO", precision=15)
    public BigDecimal getVlPago() {
        return this.vlPago;
    }
    
    public void setVlPago(BigDecimal vlPago) {
        this.vlPago = vlPago;
    }

    
    @Column(name="FL_VARIAVEL", length=1)
    public Character getFlVariavel() {
        return this.flVariavel;
    }
    
    public void setFlVariavel(Character flVariavel) {
        this.flVariavel = flVariavel;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="contaPagar")
    public Set getMovimentoCaixas() {
        return this.movimentoCaixas;
    }
    
    public void setMovimentoCaixas(Set movimentoCaixas) {
        this.movimentoCaixas = movimentoCaixas;
    }




}


