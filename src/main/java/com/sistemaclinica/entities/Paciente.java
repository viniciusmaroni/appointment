package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Paciente generated by hbm2java
 */
@Entity
@Table(name="PACIENTE"
    ,schema="DESENV"
)
public class Paciente  implements java.io.Serializable {


     private BigDecimal id;
     private Bairro bairroByPacBaiFk;
     private Bairro bairroByPacBaiResidencialFk;
     private InteressePaciente interessePaciente;
     private OrigemPaciente origemPaciente;
     private Unidade unidade;
     private Empresa empresa;
     private String nome;
     private Date dtNascimento;
     private String sexo;
     private String rg;
     private String cpf;
     private String enderecoResidencial;
     private String cepResidencial;
     private String enderecoComercial;
     private String cepComercial;
     private String telefoneResidencial;
     private String telefoneComercial;
     private String telefoneCelular;
     private String email;
     private String observacoes;
     private Date dtCadastro;
     private BigDecimal cdCriadoPor;
     private Date dtCriacao;
     private BigDecimal cdAlteradoPor;
     private Date dtUltimaAlteracao;
     private Set cheques = new HashSet(0);
     private Set pagamentoPacientes = new HashSet(0);
     private Set formaPagamentos = new HashSet(0);
     private Set tituloses = new HashSet(0);
     private Set guiaPacientes = new HashSet(0);
     private Set contratos = new HashSet(0);
     private Set convenioPacientes = new HashSet(0);
     private Set procedimentoPacientes = new HashSet(0);
     private Set agendas = new HashSet(0);
     private Set evolucaoPacientes = new HashSet(0);

    public Paciente() {
    }

	
    public Paciente(BigDecimal id, Bairro bairroByPacBaiResidencialFk, InteressePaciente interessePaciente, OrigemPaciente origemPaciente, Unidade unidade, Empresa empresa, String nome, Date dtNascimento, String sexo, String enderecoResidencial, Date dtCadastro) {
        this.id = id;
        this.bairroByPacBaiResidencialFk = bairroByPacBaiResidencialFk;
        this.interessePaciente = interessePaciente;
        this.origemPaciente = origemPaciente;
        this.unidade = unidade;
        this.empresa = empresa;
        this.nome = nome;
        this.dtNascimento = dtNascimento;
        this.sexo = sexo;
        this.enderecoResidencial = enderecoResidencial;
        this.dtCadastro = dtCadastro;
    }
    public Paciente(BigDecimal id, Bairro bairroByPacBaiFk, Bairro bairroByPacBaiResidencialFk, InteressePaciente interessePaciente, OrigemPaciente origemPaciente, Unidade unidade, Empresa empresa, String nome, Date dtNascimento, String sexo, String rg, String cpf, String enderecoResidencial, String cepResidencial, String enderecoComercial, String cepComercial, String telefoneResidencial, String telefoneComercial, String telefoneCelular, String email, String observacoes, Date dtCadastro, BigDecimal cdCriadoPor, Date dtCriacao, BigDecimal cdAlteradoPor, Date dtUltimaAlteracao, Set cheques, Set pagamentoPacientes, Set formaPagamentos, Set tituloses, Set guiaPacientes, Set contratos, Set convenioPacientes, Set procedimentoPacientes, Set agendas, Set evolucaoPacientes) {
       this.id = id;
       this.bairroByPacBaiFk = bairroByPacBaiFk;
       this.bairroByPacBaiResidencialFk = bairroByPacBaiResidencialFk;
       this.interessePaciente = interessePaciente;
       this.origemPaciente = origemPaciente;
       this.unidade = unidade;
       this.empresa = empresa;
       this.nome = nome;
       this.dtNascimento = dtNascimento;
       this.sexo = sexo;
       this.rg = rg;
       this.cpf = cpf;
       this.enderecoResidencial = enderecoResidencial;
       this.cepResidencial = cepResidencial;
       this.enderecoComercial = enderecoComercial;
       this.cepComercial = cepComercial;
       this.telefoneResidencial = telefoneResidencial;
       this.telefoneComercial = telefoneComercial;
       this.telefoneCelular = telefoneCelular;
       this.email = email;
       this.observacoes = observacoes;
       this.dtCadastro = dtCadastro;
       this.cdCriadoPor = cdCriadoPor;
       this.dtCriacao = dtCriacao;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
       this.cheques = cheques;
       this.pagamentoPacientes = pagamentoPacientes;
       this.formaPagamentos = formaPagamentos;
       this.tituloses = tituloses;
       this.guiaPacientes = guiaPacientes;
       this.contratos = contratos;
       this.convenioPacientes = convenioPacientes;
       this.procedimentoPacientes = procedimentoPacientes;
       this.agendas = agendas;
       this.evolucaoPacientes = evolucaoPacientes;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="BAI_CID_COMERCIAL", referencedColumnName="CID_ID"), 
        @JoinColumn(name="BAI_UF_COMERCIAL", referencedColumnName="CID_UF_SIGLA"), 
        @JoinColumn(name="BAI_ID_COMERCIAL", referencedColumnName="ID") } )
    public Bairro getBairroByPacBaiFk() {
        return this.bairroByPacBaiFk;
    }
    
    public void setBairroByPacBaiFk(Bairro bairroByPacBaiFk) {
        this.bairroByPacBaiFk = bairroByPacBaiFk;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="BAI_CID_RESIDENCIAL", referencedColumnName="CID_ID", nullable=false), 
        @JoinColumn(name="BAI_UF_RESIDENCIAL", referencedColumnName="CID_UF_SIGLA", nullable=false), 
        @JoinColumn(name="BAI_ID_RESIDENCIAL", referencedColumnName="ID", nullable=false) } )
    public Bairro getBairroByPacBaiResidencialFk() {
        return this.bairroByPacBaiResidencialFk;
    }
    
    public void setBairroByPacBaiResidencialFk(Bairro bairroByPacBaiResidencialFk) {
        this.bairroByPacBaiResidencialFk = bairroByPacBaiResidencialFk;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="INPAC_ID", referencedColumnName="ID"), 
        @JoinColumn(name="EMP_ID", referencedColumnName="EMP_ID", nullable=false) } )
    public InteressePaciente getInteressePaciente() {
        return this.interessePaciente;
    }
    
    public void setInteressePaciente(InteressePaciente interessePaciente) {
        this.interessePaciente = interessePaciente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="ORPAC_ID", referencedColumnName="ID", insertable=false, updatable=false), 
        @JoinColumn(name="EMP_ID", referencedColumnName="EMP_ID", nullable=false, insertable=false, updatable=false) } )
    public OrigemPaciente getOrigemPaciente() {
        return this.origemPaciente;
    }
    
    public void setOrigemPaciente(OrigemPaciente origemPaciente) {
        this.origemPaciente = origemPaciente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="UNI_ID_ORIGEM", nullable=false)
    public Unidade getUnidade() {
        return this.unidade;
    }
    
    public void setUnidade(Unidade unidade) {
        this.unidade = unidade;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false, insertable=false, updatable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    
    @Column(name="NOME", nullable=false, length=100)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_NASCIMENTO", nullable=false, length=7)
    public Date getDtNascimento() {
        return this.dtNascimento;
    }
    
    public void setDtNascimento(Date dtNascimento) {
        this.dtNascimento = dtNascimento;
    }

    
    @Column(name="SEXO", nullable=false, length=1)
    public String getSexo() {
        return this.sexo;
    }
    
    public void setSexo(String sexo) {
        this.sexo = sexo;
    }

    
    @Column(name="RG", length=20)
    public String getRg() {
        return this.rg;
    }
    
    public void setRg(String rg) {
        this.rg = rg;
    }

    
    @Column(name="CPF", length=11)
    public String getCpf() {
        return this.cpf;
    }
    
    public void setCpf(String cpf) {
        this.cpf = cpf;
    }

    
    @Column(name="ENDERECO_RESIDENCIAL", nullable=false, length=200)
    public String getEnderecoResidencial() {
        return this.enderecoResidencial;
    }
    
    public void setEnderecoResidencial(String enderecoResidencial) {
        this.enderecoResidencial = enderecoResidencial;
    }

    
    @Column(name="CEP_RESIDENCIAL", length=8)
    public String getCepResidencial() {
        return this.cepResidencial;
    }
    
    public void setCepResidencial(String cepResidencial) {
        this.cepResidencial = cepResidencial;
    }

    
    @Column(name="ENDERECO_COMERCIAL", length=200)
    public String getEnderecoComercial() {
        return this.enderecoComercial;
    }
    
    public void setEnderecoComercial(String enderecoComercial) {
        this.enderecoComercial = enderecoComercial;
    }

    
    @Column(name="CEP_COMERCIAL", length=8)
    public String getCepComercial() {
        return this.cepComercial;
    }
    
    public void setCepComercial(String cepComercial) {
        this.cepComercial = cepComercial;
    }

    
    @Column(name="TELEFONE_RESIDENCIAL", length=50)
    public String getTelefoneResidencial() {
        return this.telefoneResidencial;
    }
    
    public void setTelefoneResidencial(String telefoneResidencial) {
        this.telefoneResidencial = telefoneResidencial;
    }

    
    @Column(name="TELEFONE_COMERCIAL", length=50)
    public String getTelefoneComercial() {
        return this.telefoneComercial;
    }
    
    public void setTelefoneComercial(String telefoneComercial) {
        this.telefoneComercial = telefoneComercial;
    }

    
    @Column(name="TELEFONE_CELULAR", length=50)
    public String getTelefoneCelular() {
        return this.telefoneCelular;
    }
    
    public void setTelefoneCelular(String telefoneCelular) {
        this.telefoneCelular = telefoneCelular;
    }

    
    @Column(name="EMAIL", length=200)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="OBSERVACOES", length=4000)
    public String getObservacoes() {
        return this.observacoes;
    }
    
    public void setObservacoes(String observacoes) {
        this.observacoes = observacoes;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CADASTRO", nullable=false, length=7)
    public Date getDtCadastro() {
        return this.dtCadastro;
    }
    
    public void setDtCadastro(Date dtCadastro) {
        this.dtCadastro = dtCadastro;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paciente")
    public Set getCheques() {
        return this.cheques;
    }
    
    public void setCheques(Set cheques) {
        this.cheques = cheques;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paciente")
    public Set getPagamentoPacientes() {
        return this.pagamentoPacientes;
    }
    
    public void setPagamentoPacientes(Set pagamentoPacientes) {
        this.pagamentoPacientes = pagamentoPacientes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paciente")
    public Set getFormaPagamentos() {
        return this.formaPagamentos;
    }
    
    public void setFormaPagamentos(Set formaPagamentos) {
        this.formaPagamentos = formaPagamentos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paciente")
    public Set getTituloses() {
        return this.tituloses;
    }
    
    public void setTituloses(Set tituloses) {
        this.tituloses = tituloses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paciente")
    public Set getGuiaPacientes() {
        return this.guiaPacientes;
    }
    
    public void setGuiaPacientes(Set guiaPacientes) {
        this.guiaPacientes = guiaPacientes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paciente")
    public Set getContratos() {
        return this.contratos;
    }
    
    public void setContratos(Set contratos) {
        this.contratos = contratos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paciente")
    public Set getConvenioPacientes() {
        return this.convenioPacientes;
    }
    
    public void setConvenioPacientes(Set convenioPacientes) {
        this.convenioPacientes = convenioPacientes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paciente")
    public Set getProcedimentoPacientes() {
        return this.procedimentoPacientes;
    }
    
    public void setProcedimentoPacientes(Set procedimentoPacientes) {
        this.procedimentoPacientes = procedimentoPacientes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paciente")
    public Set getAgendas() {
        return this.agendas;
    }
    
    public void setAgendas(Set agendas) {
        this.agendas = agendas;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="paciente")
    public Set getEvolucaoPacientes() {
        return this.evolucaoPacientes;
    }
    
    public void setEvolucaoPacientes(Set evolucaoPacientes) {
        this.evolucaoPacientes = evolucaoPacientes;
    }




}


