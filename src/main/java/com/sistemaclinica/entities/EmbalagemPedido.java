package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EmbalagemPedido generated by hbm2java
 */
@Entity
@Table(name="EMBALAGEM_PEDIDO"
    ,schema="DESENV"
)
public class EmbalagemPedido  implements java.io.Serializable {


     private EmbalagemPedidoId id;
     private EmbalagemMaterial embalagemMaterial;
     private Pedido pedido;
     private Empresa empresa;
     private BigDecimal quantidade;
     private BigDecimal valorEmbalagem;
     private BigDecimal valorUnitario;
     private BigDecimal cdCriadoPor;
     private Date dtCriacao;
     private BigDecimal cdAlteradoPor;
     private Date dtUltimaAlteracao;
     private Set materialPedidos = new HashSet(0);

    public EmbalagemPedido() {
    }

	
    public EmbalagemPedido(EmbalagemPedidoId id, EmbalagemMaterial embalagemMaterial, Pedido pedido, Empresa empresa, BigDecimal quantidade, BigDecimal valorEmbalagem, BigDecimal valorUnitario) {
        this.id = id;
        this.embalagemMaterial = embalagemMaterial;
        this.pedido = pedido;
        this.empresa = empresa;
        this.quantidade = quantidade;
        this.valorEmbalagem = valorEmbalagem;
        this.valorUnitario = valorUnitario;
    }
    public EmbalagemPedido(EmbalagemPedidoId id, EmbalagemMaterial embalagemMaterial, Pedido pedido, Empresa empresa, BigDecimal quantidade, BigDecimal valorEmbalagem, BigDecimal valorUnitario, BigDecimal cdCriadoPor, Date dtCriacao, BigDecimal cdAlteradoPor, Date dtUltimaAlteracao, Set materialPedidos) {
       this.id = id;
       this.embalagemMaterial = embalagemMaterial;
       this.pedido = pedido;
       this.empresa = empresa;
       this.quantidade = quantidade;
       this.valorEmbalagem = valorEmbalagem;
       this.valorUnitario = valorUnitario;
       this.cdCriadoPor = cdCriadoPor;
       this.dtCriacao = dtCriacao;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
       this.materialPedidos = materialPedidos;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="embmaId", column=@Column(name="EMBMA_ID", nullable=false, precision=22, scale=0) ), 
        @AttributeOverride(name="pedidoId", column=@Column(name="PEDIDO_ID", nullable=false, precision=22, scale=0) ) } )
    public EmbalagemPedidoId getId() {
        return this.id;
    }
    
    public void setId(EmbalagemPedidoId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMBMA_ID", nullable=false, insertable=false, updatable=false)
    public EmbalagemMaterial getEmbalagemMaterial() {
        return this.embalagemMaterial;
    }
    
    public void setEmbalagemMaterial(EmbalagemMaterial embalagemMaterial) {
        this.embalagemMaterial = embalagemMaterial;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PEDIDO_ID", nullable=false, insertable=false, updatable=false)
    public Pedido getPedido() {
        return this.pedido;
    }
    
    public void setPedido(Pedido pedido) {
        this.pedido = pedido;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    
    @Column(name="QUANTIDADE", nullable=false, precision=22, scale=0)
    public BigDecimal getQuantidade() {
        return this.quantidade;
    }
    
    public void setQuantidade(BigDecimal quantidade) {
        this.quantidade = quantidade;
    }

    
    @Column(name="VALOR_EMBALAGEM", nullable=false, precision=15)
    public BigDecimal getValorEmbalagem() {
        return this.valorEmbalagem;
    }
    
    public void setValorEmbalagem(BigDecimal valorEmbalagem) {
        this.valorEmbalagem = valorEmbalagem;
    }

    
    @Column(name="VALOR_UNITARIO", nullable=false, precision=15)
    public BigDecimal getValorUnitario() {
        return this.valorUnitario;
    }
    
    public void setValorUnitario(BigDecimal valorUnitario) {
        this.valorUnitario = valorUnitario;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="embalagemPedido")
    public Set getMaterialPedidos() {
        return this.materialPedidos;
    }
    
    public void setMaterialPedidos(Set materialPedidos) {
        this.materialPedidos = materialPedidos;
    }




}


