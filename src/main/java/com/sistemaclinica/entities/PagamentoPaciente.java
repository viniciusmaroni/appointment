package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PagamentoPaciente generated by hbm2java
 */
@Entity
@Table(name="PAGAMENTO_PACIENTE"
    ,schema="DESENV"
)
public class PagamentoPaciente  implements java.io.Serializable {


     private BigDecimal id;
     private Cheque cheque;
     private Contrato contrato;
     private MeioPagamento meioPagamento;
     private Paciente paciente;
     private PagamentosTitulos pagamentosTitulos;
     private Unidade unidade;
     private Empresa empresa;
     private Date dtPagamento;
     private BigDecimal valorPago;
     private Short nuParcelas;
     private String flTributavel;
     private BigDecimal cdCriadoPor;
     private Date dtCriacao;
     private BigDecimal cdAlteradoPor;
     private Date dtUltimaAlteracao;
     private Set provisaoReceitas = new HashSet(0);
     private Set movimentoCaixas = new HashSet(0);

    public PagamentoPaciente() {
    }

	
    public PagamentoPaciente(BigDecimal id, MeioPagamento meioPagamento, Paciente paciente, Unidade unidade, Empresa empresa, Date dtPagamento, BigDecimal valorPago, String flTributavel) {
        this.id = id;
        this.meioPagamento = meioPagamento;
        this.paciente = paciente;
        this.unidade = unidade;
        this.empresa = empresa;
        this.dtPagamento = dtPagamento;
        this.valorPago = valorPago;
        this.flTributavel = flTributavel;
    }
    public PagamentoPaciente(BigDecimal id, Cheque cheque, Contrato contrato, MeioPagamento meioPagamento, Paciente paciente, PagamentosTitulos pagamentosTitulos, Unidade unidade, Empresa empresa, Date dtPagamento, BigDecimal valorPago, Short nuParcelas, String flTributavel, BigDecimal cdCriadoPor, Date dtCriacao, BigDecimal cdAlteradoPor, Date dtUltimaAlteracao, Set provisaoReceitas, Set movimentoCaixas) {
       this.id = id;
       this.cheque = cheque;
       this.contrato = contrato;
       this.meioPagamento = meioPagamento;
       this.paciente = paciente;
       this.pagamentosTitulos = pagamentosTitulos;
       this.unidade = unidade;
       this.empresa = empresa;
       this.dtPagamento = dtPagamento;
       this.valorPago = valorPago;
       this.nuParcelas = nuParcelas;
       this.flTributavel = flTributavel;
       this.cdCriadoPor = cdCriadoPor;
       this.dtCriacao = dtCriacao;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
       this.provisaoReceitas = provisaoReceitas;
       this.movimentoCaixas = movimentoCaixas;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CHE_ID")
    public Cheque getCheque() {
        return this.cheque;
    }
    
    public void setCheque(Cheque cheque) {
        this.cheque = cheque;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONT_ID")
    public Contrato getContrato() {
        return this.contrato;
    }
    
    public void setContrato(Contrato contrato) {
        this.contrato = contrato;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MEIO_ID", nullable=false)
    public MeioPagamento getMeioPagamento() {
        return this.meioPagamento;
    }
    
    public void setMeioPagamento(MeioPagamento meioPagamento) {
        this.meioPagamento = meioPagamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAC_ID", nullable=false)
    public Paciente getPaciente() {
        return this.paciente;
    }
    
    public void setPaciente(Paciente paciente) {
        this.paciente = paciente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAGTIT_ID")
    public PagamentosTitulos getPagamentosTitulos() {
        return this.pagamentosTitulos;
    }
    
    public void setPagamentosTitulos(PagamentosTitulos pagamentosTitulos) {
        this.pagamentosTitulos = pagamentosTitulos;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="UNI_ID", nullable=false)
    public Unidade getUnidade() {
        return this.unidade;
    }
    
    public void setUnidade(Unidade unidade) {
        this.unidade = unidade;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_PAGAMENTO", nullable=false, length=7)
    public Date getDtPagamento() {
        return this.dtPagamento;
    }
    
    public void setDtPagamento(Date dtPagamento) {
        this.dtPagamento = dtPagamento;
    }

    
    @Column(name="VALOR_PAGO", nullable=false, precision=15)
    public BigDecimal getValorPago() {
        return this.valorPago;
    }
    
    public void setValorPago(BigDecimal valorPago) {
        this.valorPago = valorPago;
    }

    
    @Column(name="NU_PARCELAS", precision=3, scale=0)
    public Short getNuParcelas() {
        return this.nuParcelas;
    }
    
    public void setNuParcelas(Short nuParcelas) {
        this.nuParcelas = nuParcelas;
    }

    
    @Column(name="FL_TRIBUTAVEL", nullable=false, length=1)
    public String getFlTributavel() {
        return this.flTributavel;
    }
    
    public void setFlTributavel(String flTributavel) {
        this.flTributavel = flTributavel;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="pagamentoPaciente")
    public Set getProvisaoReceitas() {
        return this.provisaoReceitas;
    }
    
    public void setProvisaoReceitas(Set provisaoReceitas) {
        this.provisaoReceitas = provisaoReceitas;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="pagamentoPaciente")
    public Set getMovimentoCaixas() {
        return this.movimentoCaixas;
    }
    
    public void setMovimentoCaixas(Set movimentoCaixas) {
        this.movimentoCaixas = movimentoCaixas;
    }




}


