package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * ConsumoItem generated by hbm2java
 */
@Entity
@Table(name="CONSUMO_ITEM"
    ,schema="DESENV"
    , uniqueConstraints = @UniqueConstraint(columnNames={"PROF_ID", "CONS_ID", "UNI_ID", "EITEM_ITEM_ID", "EITEM_ID", "DATA"}) 
)
public class ConsumoItem  implements java.io.Serializable {


     private BigDecimal id;
     private ItemUnidade itemUnidade;
     private Consultorio consultorio;
     private EmbalagemItem embalagemItem;
     private Profissional profissional;
     private Unidade unidade;
     private Empresa empresa;
     private Date data;
     private BigDecimal quantidade;
     private BigDecimal cdCriadoPor;
     private BigDecimal cdAlteradoPor;
     private Date dtCriacao;
     private Date dtUltimaAlteracao;

    public ConsumoItem() {
    }

	
    public ConsumoItem(BigDecimal id, ItemUnidade itemUnidade, Consultorio consultorio, EmbalagemItem embalagemItem, Unidade unidade, Empresa empresa, Date data, BigDecimal quantidade, BigDecimal cdCriadoPor, BigDecimal cdAlteradoPor, Date dtCriacao, Date dtUltimaAlteracao) {
        this.id = id;
        this.itemUnidade = itemUnidade;
        this.consultorio = consultorio;
        this.embalagemItem = embalagemItem;
        this.unidade = unidade;
        this.empresa = empresa;
        this.data = data;
        this.quantidade = quantidade;
        this.cdCriadoPor = cdCriadoPor;
        this.cdAlteradoPor = cdAlteradoPor;
        this.dtCriacao = dtCriacao;
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }
    public ConsumoItem(BigDecimal id, ItemUnidade itemUnidade, Consultorio consultorio, EmbalagemItem embalagemItem, Profissional profissional, Unidade unidade, Empresa empresa, Date data, BigDecimal quantidade, BigDecimal cdCriadoPor, BigDecimal cdAlteradoPor, Date dtCriacao, Date dtUltimaAlteracao) {
       this.id = id;
       this.itemUnidade = itemUnidade;
       this.consultorio = consultorio;
       this.embalagemItem = embalagemItem;
       this.profissional = profissional;
       this.unidade = unidade;
       this.empresa = empresa;
       this.data = data;
       this.quantidade = quantidade;
       this.cdCriadoPor = cdCriadoPor;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtCriacao = dtCriacao;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="UNI_ID", referencedColumnName="UNI_ID", nullable=false), 
        @JoinColumn(name="EITEM_ITEM_ID", referencedColumnName="ITEM_ID", nullable=false) } )
    public ItemUnidade getItemUnidade() {
        return this.itemUnidade;
    }
    
    public void setItemUnidade(ItemUnidade itemUnidade) {
        this.itemUnidade = itemUnidade;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="UNI_ID", referencedColumnName="UNI_ID", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="CONS_ID", referencedColumnName="ID", insertable=false, updatable=false) } )
    public Consultorio getConsultorio() {
        return this.consultorio;
    }
    
    public void setConsultorio(Consultorio consultorio) {
        this.consultorio = consultorio;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="EITEM_ITEM_ID", referencedColumnName="ITEM_ID", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="EITEM_ID", referencedColumnName="ID", nullable=false, insertable=false, updatable=false) } )
    public EmbalagemItem getEmbalagemItem() {
        return this.embalagemItem;
    }
    
    public void setEmbalagemItem(EmbalagemItem embalagemItem) {
        this.embalagemItem = embalagemItem;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PROF_ID")
    public Profissional getProfissional() {
        return this.profissional;
    }
    
    public void setProfissional(Profissional profissional) {
        this.profissional = profissional;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="UNI_ID", nullable=false, insertable=false, updatable=false)
    public Unidade getUnidade() {
        return this.unidade;
    }
    
    public void setUnidade(Unidade unidade) {
        this.unidade = unidade;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DATA", nullable=false, length=7)
    public Date getData() {
        return this.data;
    }
    
    public void setData(Date data) {
        this.data = data;
    }

    
    @Column(name="QUANTIDADE", nullable=false, precision=22, scale=0)
    public BigDecimal getQuantidade() {
        return this.quantidade;
    }
    
    public void setQuantidade(BigDecimal quantidade) {
        this.quantidade = quantidade;
    }

    
    @Column(name="CD_CRIADO_POR", nullable=false, precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    
    @Column(name="CD_ALTERADO_POR", nullable=false, precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", nullable=false, length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", nullable=false, length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }




}


