package com.sistemaclinica.entities;
// Generated 09/07/2015 17:16:10 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cheque generated by hbm2java
 */
@Entity
@Table(name="CHEQUE"
    ,schema="DESENV"
)
public class Cheque  implements java.io.Serializable {


     private BigDecimal id;
     private Banco banco;
     private Paciente paciente;
     private Portador portador;
     private SituacaoCheque situacaoCheque;
     private Empresa empresa;
     private String numeroAgencia;
     private String numeroCheque;
     private Date dtRecebimento;
     private BigDecimal valor;
     private String numeroConta;
     private Date dtPredatacao;
     private String documentoTitular;
     private String nomeTitular;
     private BigDecimal cdCriadoPor;
     private Date dtCriacao;
     private BigDecimal cdAlteradoPor;
     private Date dtUltimaAlteracao;
     private Set chequePagamentoPedidos = new HashSet(0);
     private Set pagamentoCobrancas = new HashSet(0);
     private Set movimentacaoCheques = new HashSet(0);
     private Set pagamentoPacientes = new HashSet(0);

    public Cheque() {
    }

	
    public Cheque(BigDecimal id, Banco banco, Paciente paciente, Portador portador, SituacaoCheque situacaoCheque, Empresa empresa, String numeroAgencia, String numeroCheque, Date dtRecebimento, BigDecimal valor, Date dtPredatacao, String nomeTitular) {
        this.id = id;
        this.banco = banco;
        this.paciente = paciente;
        this.portador = portador;
        this.situacaoCheque = situacaoCheque;
        this.empresa = empresa;
        this.numeroAgencia = numeroAgencia;
        this.numeroCheque = numeroCheque;
        this.dtRecebimento = dtRecebimento;
        this.valor = valor;
        this.dtPredatacao = dtPredatacao;
        this.nomeTitular = nomeTitular;
    }
    public Cheque(BigDecimal id, Banco banco, Paciente paciente, Portador portador, SituacaoCheque situacaoCheque, Empresa empresa, String numeroAgencia, String numeroCheque, Date dtRecebimento, BigDecimal valor, String numeroConta, Date dtPredatacao, String documentoTitular, String nomeTitular, BigDecimal cdCriadoPor, Date dtCriacao, BigDecimal cdAlteradoPor, Date dtUltimaAlteracao, Set chequePagamentoPedidos, Set pagamentoCobrancas, Set movimentacaoCheques, Set pagamentoPacientes) {
       this.id = id;
       this.banco = banco;
       this.paciente = paciente;
       this.portador = portador;
       this.situacaoCheque = situacaoCheque;
       this.empresa = empresa;
       this.numeroAgencia = numeroAgencia;
       this.numeroCheque = numeroCheque;
       this.dtRecebimento = dtRecebimento;
       this.valor = valor;
       this.numeroConta = numeroConta;
       this.dtPredatacao = dtPredatacao;
       this.documentoTitular = documentoTitular;
       this.nomeTitular = nomeTitular;
       this.cdCriadoPor = cdCriadoPor;
       this.dtCriacao = dtCriacao;
       this.cdAlteradoPor = cdAlteradoPor;
       this.dtUltimaAlteracao = dtUltimaAlteracao;
       this.chequePagamentoPedidos = chequePagamentoPedidos;
       this.pagamentoCobrancas = pagamentoCobrancas;
       this.movimentacaoCheques = movimentacaoCheques;
       this.pagamentoPacientes = pagamentoPacientes;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BAN_NUMERO", nullable=false)
    public Banco getBanco() {
        return this.banco;
    }
    
    public void setBanco(Banco banco) {
        this.banco = banco;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAC_ID", nullable=false)
    public Paciente getPaciente() {
        return this.paciente;
    }
    
    public void setPaciente(Paciente paciente) {
        this.paciente = paciente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="POR_ID", nullable=false)
    public Portador getPortador() {
        return this.portador;
    }
    
    public void setPortador(Portador portador) {
        this.portador = portador;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SICHE_ID", nullable=false)
    public SituacaoCheque getSituacaoCheque() {
        return this.situacaoCheque;
    }
    
    public void setSituacaoCheque(SituacaoCheque situacaoCheque) {
        this.situacaoCheque = situacaoCheque;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMP_ID", nullable=false)
    public Empresa getEmpresa() {
        return this.empresa;
    }
    
    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    
    @Column(name="NUMERO_AGENCIA", nullable=false, length=10)
    public String getNumeroAgencia() {
        return this.numeroAgencia;
    }
    
    public void setNumeroAgencia(String numeroAgencia) {
        this.numeroAgencia = numeroAgencia;
    }

    
    @Column(name="NUMERO_CHEQUE", nullable=false, length=20)
    public String getNumeroCheque() {
        return this.numeroCheque;
    }
    
    public void setNumeroCheque(String numeroCheque) {
        this.numeroCheque = numeroCheque;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_RECEBIMENTO", nullable=false, length=7)
    public Date getDtRecebimento() {
        return this.dtRecebimento;
    }
    
    public void setDtRecebimento(Date dtRecebimento) {
        this.dtRecebimento = dtRecebimento;
    }

    
    @Column(name="VALOR", nullable=false, precision=15)
    public BigDecimal getValor() {
        return this.valor;
    }
    
    public void setValor(BigDecimal valor) {
        this.valor = valor;
    }

    
    @Column(name="NUMERO_CONTA", length=20)
    public String getNumeroConta() {
        return this.numeroConta;
    }
    
    public void setNumeroConta(String numeroConta) {
        this.numeroConta = numeroConta;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_PREDATACAO", nullable=false, length=7)
    public Date getDtPredatacao() {
        return this.dtPredatacao;
    }
    
    public void setDtPredatacao(Date dtPredatacao) {
        this.dtPredatacao = dtPredatacao;
    }

    
    @Column(name="DOCUMENTO_TITULAR", length=14)
    public String getDocumentoTitular() {
        return this.documentoTitular;
    }
    
    public void setDocumentoTitular(String documentoTitular) {
        this.documentoTitular = documentoTitular;
    }

    
    @Column(name="NOME_TITULAR", nullable=false, length=100)
    public String getNomeTitular() {
        return this.nomeTitular;
    }
    
    public void setNomeTitular(String nomeTitular) {
        this.nomeTitular = nomeTitular;
    }

    
    @Column(name="CD_CRIADO_POR", precision=22, scale=0)
    public BigDecimal getCdCriadoPor() {
        return this.cdCriadoPor;
    }
    
    public void setCdCriadoPor(BigDecimal cdCriadoPor) {
        this.cdCriadoPor = cdCriadoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_CRIACAO", length=7)
    public Date getDtCriacao() {
        return this.dtCriacao;
    }
    
    public void setDtCriacao(Date dtCriacao) {
        this.dtCriacao = dtCriacao;
    }

    
    @Column(name="CD_ALTERADO_POR", precision=22, scale=0)
    public BigDecimal getCdAlteradoPor() {
        return this.cdAlteradoPor;
    }
    
    public void setCdAlteradoPor(BigDecimal cdAlteradoPor) {
        this.cdAlteradoPor = cdAlteradoPor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DT_ULTIMA_ALTERACAO", length=7)
    public Date getDtUltimaAlteracao() {
        return this.dtUltimaAlteracao;
    }
    
    public void setDtUltimaAlteracao(Date dtUltimaAlteracao) {
        this.dtUltimaAlteracao = dtUltimaAlteracao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cheque")
    public Set getChequePagamentoPedidos() {
        return this.chequePagamentoPedidos;
    }
    
    public void setChequePagamentoPedidos(Set chequePagamentoPedidos) {
        this.chequePagamentoPedidos = chequePagamentoPedidos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cheque")
    public Set getPagamentoCobrancas() {
        return this.pagamentoCobrancas;
    }
    
    public void setPagamentoCobrancas(Set pagamentoCobrancas) {
        this.pagamentoCobrancas = pagamentoCobrancas;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cheque")
    public Set getMovimentacaoCheques() {
        return this.movimentacaoCheques;
    }
    
    public void setMovimentacaoCheques(Set movimentacaoCheques) {
        this.movimentacaoCheques = movimentacaoCheques;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="cheque")
    public Set getPagamentoPacientes() {
        return this.pagamentoPacientes;
    }
    
    public void setPagamentoPacientes(Set pagamentoPacientes) {
        this.pagamentoPacientes = pagamentoPacientes;
    }




}


